//Given two strings text1 and text2, return the length of their longest common subsequence. If there is no common subsequence, return 0.
//A subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.

public class Solution 
{
    public int LongestCommonSubsequence(string text1, string text2)
    {
        int[,] dp = new int[text1.Length + 1, text2.Length + 1];

        for (int ix = 1; ix < text1.Length + 1; ++ix)
        {
            for (int iy = 1; iy < text2.Length + 1; ++iy)
            {
                if (text1[ix - 1] == text2[iy - 1])
                    dp[ix, iy] = dp[ix - 1, iy - 1] + 1;
                else
                    dp[ix, iy] = Math.Max(dp[ix - 1, iy], dp[ix, iy - 1]);
            }
        }

        return dp[text1.Length, text2.Length];
    }
}
