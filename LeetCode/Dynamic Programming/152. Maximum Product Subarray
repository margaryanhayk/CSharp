//Given an integer array nums, find a subarray
//that has the largest product, and return the product
//The test cases are generated so that the answer will fit in a 32-bit integer.

public class Solution 
{
    public int MaxProduct(int[] nums) 
    {
        if (nums.Length == 0)
            return 0;
        int min = nums[0];
        int max = nums[0];
        int result = max;
        for (int ix = 1; ix < nums.Length; ++ix)
        {
            int tmp = max;
            max = Math.Max(nums[ix], Math.Max(max * nums[ix], min * nums[ix]));
            min = Math.Min(nums[ix], Math.Min(tmp * nums[ix], min * nums[ix])); 
            result = Math.Max(max, result);
        }
        return result;       
    }
}
