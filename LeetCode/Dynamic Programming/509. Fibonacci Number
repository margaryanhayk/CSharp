//The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,
//F(0) = 0, F(1) = 1
//F(n) = F(n - 1) + F(n - 2), for n > 1.
//Given n, calculate F(n).

//////ITERATIVE SOLUTION///////////
public class Solution 
{
    public int Fib(int n) 
    {
        if (n == 0 || n == 1)
            return n;
        int x = 0;
        int y = 1;
        int[] arr = new int[n + 1];
        arr[0] = 0;
        arr[1] = 1;
        for(int ix = 2; ix <= n; ++ix)
            arr[ix] = arr[ix -1] + arr[ix -2];
        return arr[n];        
    }
}

//////RECURSIVE SOLUTION///////////
public class Solution 
{
    public int Fib(int n) 
    {
        return FRec(n);
    }
    public int FRec(int n)
    {
        if(n == 0 || n == 1)
            return n;
        return FRec(n - 1) + FRec(n - 2);
    }
}
