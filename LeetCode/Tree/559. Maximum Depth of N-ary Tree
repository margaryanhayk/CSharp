//Given a n-ary tree, find its maximum depth.
//The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
//Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).

/*
// Definition for a Node.
public class Node {
    public int val;
    public IList<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, IList<Node> _children) {
        val = _val;
        children = _children;
    }
}
*/

public class Solution 
{
    public int MaxDepth(Node root)
    {
        return MaxDepthRec(root, 0);    
    }
    private int MaxDepthRec(Node root, int level) 
    {
        if(root == null)
            return level;
        int maxDepth = level + 1;
        for(int ix = 0; ix < root.children.Count; ++ix)
            maxDepth = Math.Max(maxDepth, MaxDepthRec(root.children[ix], level + 1));
        return maxDepth;
    }
}
