//Given a binary tree, find its minimum depth.
//The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.
//Note: A leaf is a node with no children.

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution 
{
    public int MinDepth(TreeNode root)
    {
        if(root == null)
            return 0;
        return DFS(root);
    }
    private int DFS(TreeNode node)
    {
        if (node == null)
            return int.MaxValue;
        if (node.left == null && node.right == null)
            return 1;
        return 1 + Math.Min(DFS(node.left), DFS(node.right));
    }
}
