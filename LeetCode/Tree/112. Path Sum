//Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.
//A leaf is a node with no children.

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution 
{
    public bool HasPathSum(TreeNode root, int targetSum)
    {
        if (root == null)
            return false;
        return DFS(root, targetSum, 0);
    }
    private bool DFS(TreeNode node, int targetSum, int currentSum)
    {
        if (node == null)
            return false;

        currentSum += node.val;
        if (node.left == null && node.right == null)
            return targetSum == currentSum;

        return DFS(node.left, targetSum, currentSum) || DFS(node.right, targetSum, currentSum);
    }
}
