//Given the root of a binary tree, return the length of the diameter of the tree.
//The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.
//The length of a path between two nodes is represented by the number of edges between them.

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution 
{
    public int diameter = 0;
    public int DiameterOfBinaryTree(TreeNode root)
    {
        MaxDepth(root);
        return diameter;
    }
    private int MaxDepth(TreeNode root)
    {
        if(root == null)
            return 0;
        int left = MaxDepth(root.left);
        int right = MaxDepth(root.right);

        diameter = Math.Max(diameter, left + right);
        return Math.Max(left, right) + 1;
    }
}
