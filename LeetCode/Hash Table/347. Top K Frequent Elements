//Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.

public class Solution 
{
    public int[] TopKFrequent(int[] nums, int k)
    {
        Dictionary<int, int> counter = new Dictionary<int, int>();
        foreach(var num in nums)
        {
            if(counter.ContainsKey(num))
                counter[num]++;
            else
                counter.Add(num, 1);
        }
        PriorityQueue<int, int> minHeap = new PriorityQueue<int, int>();
        foreach(int num in counter.Keys)
        {
            minHeap.Enqueue(num, counter[num]);
            if (minHeap.Count > k)
                minHeap.Dequeue();
        }
        int[] result = new int[k];
        for(int ix = 0; ix < k; ++ix)
        {
            result[ix] = minHeap.Dequeue();
        }
        return result;
    }
}
