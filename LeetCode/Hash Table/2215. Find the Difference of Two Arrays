//Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:
//answer[0] is a list of all distinct integers in nums1 which are not present in nums2.
//answer[1] is a list of all distinct integers in nums2 which are not present in nums1.
//Note that the integers in the lists may be returned in any order.

public class Solution {
    public IList<IList<int>> FindDifference(int[] nums1, int[] nums2) 
    {
        var firstNums = new Dictionary<int, bool>();
        List<List<int>> result = new List<List<int>>();
        var x = new HashSet<int>();
        var y = new List<int>();
        foreach(var num in nums1)
        {
            if(!firstNums.ContainsKey(num))
                firstNums.Add(num, false);
        }         
        foreach(var num in nums2)
        {
            if(firstNums.ContainsKey(num))
                firstNums[num] = true;
            else
                x.Add(num);
        }
        y = firstNums.Where(t => t.Value == false).Select(t => t.Key).ToList();
        return  new List<IList<int>> {y,x.ToList()};        
    }
}
