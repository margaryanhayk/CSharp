//You are given an array of strings names, and an array heights that consists of distinct positive integers. Both arrays are of length n.
//For each index i, names[i] and heights[i] denote the name and height of the ith person.
//Return names sorted in descending order by the people's heights.

public class Solution {
    public string[] SortPeople(string[] names, int[] heights) 
    {
        SortedDictionary<int, int> container = new SortedDictionary<int, int>();
        for(int ix = 0; ix < names.Length; ++ix)
            container.Add(heights[ix], ix);
        string[] result = new string[names.Length];
        int i = 0;
        foreach(var el in container.Reverse())
            result[i++] = names[el.Value];
        return result;
    }
}

public class Solution {
    public string[] SortPeople(string[] names, int[] heights) 
    {
        PriorityQueue<string, int> container = new PriorityQueue<string, int>();
        for(int ix = 0; ix < names.Length; ++ix)
            container.Enqueue(names[ix], Int32.MaxValue - heights[ix]);
        string[] result = new string[names.Length];
        for(int ix = 0; ix < names.Length; ++ix)
            result[ix] = container.Dequeue();
        return result;
    }
}
