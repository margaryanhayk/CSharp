//You are given a string s. Reorder the string using the following algorithm:
//Pick the smallest character from s and append it to the result.
//Pick the smallest character from s which is greater than the last appended character to the result and append it.
//Repeat step 2 until you cannot pick more characters.
//Pick the largest character from s and append it to the result.
//Pick the largest character from s which is smaller than the last appended character to the result and append it.
//Repeat step 5 until you cannot pick more characters.
//Repeat the steps from 1 to 6 until you pick all characters from s.
//In each step, If the smallest or the largest character appears more than once you can choose any occurrence and append it to the result.
//Return the result string after sorting s with this algorithm.

public class Solution {
    public string SortString(string s) 
    {
        SortedDictionary<char, int> container = new SortedDictionary<char, int>();
        foreach(char ch in s)
        {
            if(container.ContainsKey(ch))
                ++container[ch];
            else
                container.Add(ch, 1);
        }
        StringBuilder sb = new StringBuilder();
        while(sb.Length < s.Length)
        {
            foreach(var el in container.Keys.ToList().Where(x => container[x] > 0))
            {
                sb.Append(el, 1);
                --container[el];
            }
            
            foreach(var el in container.Keys.Reverse().ToList().Where(x => container[x] > 0))
            {
                sb.Append(el, 1);
                --container[el];
            }
        }
        return  sb.ToString();
    }
}
