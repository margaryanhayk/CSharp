//Given a zero-based permutation nums (0-indexed), build an array ans of the same length where ans[i] = nums[nums[i]] for each 0 <= i < nums.length and return it.
//A zero-based permutation nums is an array of distinct integers from 0 to nums.length - 1 (inclusive).

public class Solution 
{
    public int[] BuildArray(int[] nums)
    {
        for (int ix = 0; ix < nums.Length; ++ix)
        {
            nums[ix] = (nums[nums[ix]] % 1001) * 1001 + nums[ix];
        }
        for (int ix = 0; ix < nums.Length; ++ix)
        {
            nums[ix] = nums[ix] / 1001; 
        }
        return nums;
    }
}
