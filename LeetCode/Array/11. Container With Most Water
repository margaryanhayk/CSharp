//You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
//Find two lines that together with the x-axis form a container, such that the container contains the most water.
//Return the maximum amount of water a container can store.
//Notice that you may not slant the container.

public class Solution 
{
    public int MaxArea(int[] height)
    {
        if (height.Length == 0)
            return 0;
        int leftIndex = 0;
        int rightIndex = height.Length - 1;
        int area = 0;
        while(leftIndex < rightIndex) 
        {
            var newArea = (rightIndex - leftIndex) * (Math.Min(height[leftIndex], height[rightIndex]));
            area = Math.Max(area, newArea);
            if (height[leftIndex] < height[rightIndex])
                ++leftIndex;
            else
                --rightIndex;
        }
        return area;
    }
}
