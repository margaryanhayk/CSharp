//We are given a list nums of integers representing a list compressed with run-length encoding.
//Consider each adjacent pair of elements [freq, val] = [nums[2*i], nums[2*i+1]] (with i >= 0).  For each such pair, there are freq elements with value val concatenated in a sublist. Concatenate all the sublists from left to right to generate the decompressed list.
//Return the decompressed list.

public class Solution {
    public int[] DecompressRLElist(int[] nums)
    {
        List<int> list = new List<int>();
        for(int ix = 0; ix < nums.Length; ix += 2)
        {
            for(int x = 0; x < nums[ix]; ++x)
                list.Add(nums[ix + 1]);
        }
        return list.ToArray();
    }
}
