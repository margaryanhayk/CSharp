//Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
//You may assume that each input would have exactly one solution, and you may not use the same element twice.
//You can return the answer in any order.

public class Solution {
    public int[] TwoSum(int[] nums, int target) 
    {
        Dictionary<int, int> cnt = new Dictionary<int,int>();
        for (int ix = 0; ix < nums.Length; ++ix)
        {
            if(cnt.ContainsKey(target - nums[ix]))
                return new int[]{cnt[target - nums[ix]], ix};
            cnt.TryAdd(nums[ix], ix);
        }
        return null;
    }
}
