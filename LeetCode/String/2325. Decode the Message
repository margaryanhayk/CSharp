//You are given the strings key and message, which represent a cipher key and a secret message, respectively. The steps to decode message are as follows:
//Use the first appearance of all 26 lowercase English letters in key as the order of the substitution table.
//Align the substitution table with the regular English alphabet.
//Each letter in message is then substituted using the table.
//Spaces ' ' are transformed to themselves.
//For example, given key = "happy boy" (actual key would have at least one instance of each letter in the alphabet), we have the partial substitution table of ('h' -> 'a', 'a' -> 'b', 'p' -> 'c', 'y' -> 'd', 'b' -> 'e', 'o' -> 'f').


public class Solution {
    public string DecodeMessage(string key, string message)
    {
        Dictionary<char, char> dict = new Dictionary<char, char>();
        int x = 0;
        StringBuilder sb = new StringBuilder();
        for (char ix = 'a'; ix <= 'z'; ++ix)
        {
            if (key[x] == ' ' || dict.ContainsKey(key[x]))
            {
                ++x;
                 --ix;
            }
            else
                dict[key[x++]] = ix;
        }
        foreach (char alph in message)
        {
            if (alph == ' ')
                sb.Append(alph);
            else
                sb.Append(dict[alph]);
        }
        return sb.ToString();
    }
}
